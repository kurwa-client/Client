buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = 'http://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.0"
group = "net.kurwaclient"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.0.2531"
    runDir = "run"
    mappings = "snapshot_20171003"
    coreMod = "net.kurwaclient.injection.MixinInit"
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    compile "com.github.ZeroMemes:Alpine:1.6"
    compile "net.jodah:typetools:0.6.2"
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile 'dom4j:dom4j:1.6.1'
    testCompile 'junit:junit:4.12'

    compile 'club.minnced:java-discord-rpc:2.0.2'
    compile 'com.mashape.unirest:unirest-java:1.3.1'
}

jar {
    manifest.attributes(
            "MixinConfigs": "mixins.kurwa.json",
            "tweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "FMLCorePluginContainsFMLMod": "net.kurwaclient.injection.MixinInit",
            'ForceLoadAsMod': 'true'
    )
}

mixin {
    add sourceSets.main, 'mixins.kurwaclient.refmap.json'
    defaultObfuscationEnv searge //so mixin doesn't have a go at us
}

shadowJar {
    dependencies {
        include(dependency('org.yaml:snakeyaml')) //snakeyaml is needed!! one of dependencies depend on this.
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.github.ZeroMemes:Alpine'))
        include(dependency('net.jodah:typetools'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.javassist:javassist'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
build.dependsOn(shadowJar)
